{"version":3,"sources":["img/rocket.svg","img/sensor1.png","img/sensor2.png","img/sensor3.png","components/Button.js","components/Navbar.js","components/Main.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","_ref","children","_ref$onClick","onClick","react_default","a","createElement","className","Navbar","react_router_dom","to","src","logo","alt","src_components_Button","window","open","Modal","setAppElement","Main","_useState","useState","_useState2","Object","slicedToArray","modalOpen","setModalOpen","Fragment","lib_default","isOpen","onRequestClose","contentLabel","overlayClassName","action","method","type","name","rows","sensor1","sensor2","sensor3","NotFound","App","src_components_Navbar","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b12b03ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rocket.fe9f5eed.svg\";","module.exports = __webpack_public_path__ + \"static/media/sensor1.cc5471ab.png\";","module.exports = __webpack_public_path__ + \"static/media/sensor2.b2b95891.png\";","module.exports = __webpack_public_path__ + \"static/media/sensor3.1abc3357.png\";","import React from 'react';\nimport './Button.scss';\n\nconst Button = ({ children, onClick = () => {} }) => {\n    return (\n        <button className=\"button\" onClick={onClick}>\n            <div className=\"buttonChildren\">{children}</div>\n        </button>\n    );\n}\n\nexport default Button;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navbar.scss';\nimport logo from '../img/rocket.svg';\nimport Button from './Button';\n\nconst buttonClick = () => {\n  window.open(\"https://angel.co\", \"_blank\");\n}\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <div className=\"left\">\n        <Link to=\"/\" className=\"logoLink\">\n          <img src={logo} className=\"logo\" alt=\"rocket icon\" />\n          <span className=\"voyage\">voyage</span><span className=\"labs\">labs</span>\n        </Link>\n      </div>\n      <div className=\"right\">\n        <Button onClick={() => buttonClick()}>Join Our Voyage</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\n\nimport './Main.scss';\nimport Button from './Button';\n\nimport sensor1 from '../img/sensor1.png';\nimport sensor2 from '../img/sensor2.png';\nimport sensor3 from '../img/sensor3.png';\n\nModal.setAppElement('#root');\n\nconst Main = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const buttonClick = () => {\n    window.open(\"https://angel.co/company/voyage-labs\", \"_blank\");\n  }\n\n  return (\n    <>\n      <Modal\n        isOpen={modalOpen}\n        onRequestClose={() => setModalOpen(false)}\n        contentLabel=\"Contact Modal\"\n        className=\"contactModal\"\n        overlayClassName=\"modalOverlay\"\n      >\n        <div className=\"contactHeader\">Questions? Reach out to us!</div>\n        <form action=\"https://formspree.io/carrie@medella.ca\" method=\"POST\">\n\n          <div className=\"formTitle\">Name</div>\n          <input className=\"inputField\" type=\"text\" name=\"Name\"/>\n\n          <div className=\"formTitle\">Email</div>\n          <input className=\"inputField\" type=\"text\" name=\"_replyto\"/>\n\n          <div className=\"formTitle\">Subject</div>\n          <input className=\"inputField\" name=\"Subject\"/>\n\n          <div className=\"formTitle\">Message</div>\n          <textarea className=\"textarea\" rows=\"5\" name=\"Message\"/>\n\n          <Button type=\"submit\">Send</Button>\n        </form>\n      </Modal>\n      <div className=\"main\">\n        <div className=\"left\">\n          <h1 className=\"title\">Weâ€™re finding a better way </h1>\n          <div className=\"bodytext\">\n          Voyage Labs is building best-in-class sensors to monitor small molecules, lipids, \n          proteins and drugs. Learn more about how our sensor platform works, \n          and how it can help you build a better detection system.\n          </div>\n          <div className=\"buttons\">\n            <div className=\"contact\">\n            <Button onClick={() => setModalOpen(true)}>Contact Us</Button>\n            </div>\n            <div className=\"join\">\n            <Button onClick={() => buttonClick()}>Join Our Voyage</Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"right\">\n          <img src={sensor1} className=\"sensor1\" alt=\"Sensor layer 1\" />\n          <img src={sensor2} className=\"sensor2\" alt=\"Sensor layer 2\" />\n          <img src={sensor3} className=\"sensor3\" alt=\"Sensor layer 3\" />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport './NotFound.scss';\n\nconst NotFound = () => {\n  return (\n    <div className=\"notfound\">\n      Oops, this page doesn't exist!\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport './App.scss';\n\nimport Navbar from './components/Navbar';\nimport Main from './components/Main';\nimport NotFound from './components/NotFound';\n\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route component={NotFound} />\n        </Switch>\n        {/* <div className=\"footer\">\n          <a href=\"http://www.facebook.com\" target=\"_blank\"><img src={fb} className=\"icon\"/></a>\n          <a href=\"http://www.twitter.com\" target=\"_blank\"><img src={twitter} className=\"icon\"/></a>\n          <a href=\"http://www.youtube.com\" target=\"_blank\"><img src='path_to_your_image' className=\"icon\"/></a>\n         </div>\n         */}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}